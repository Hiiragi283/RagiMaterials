buildscript {
    ext.kotlin_version = '1.8.10'
    repositories {
        maven {
            url = "https://maven.minecraftforge.net"
        }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version, changing: true
    }
}

plugins {
    id 'wtf.gofancy.fancygradle' version "1.1.+"
}

apply plugin: "idea"
apply plugin: "java-library"
apply plugin: "kotlin"
apply plugin: "net.minecraftforge.gradle"

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

sourceCompatibility = targetCompatibility = "1.8"

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {
    //version = "1.12.2-14.23.5.2860"
    //runDir = "run"
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/ragi_materials_at.cfg')
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            environment 'MC_VERSION', project.minecraft_version.toString()
            mods {
                ragi_materials {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            environment 'MC_VERSION', project.minecraft_version.toString()
            mods {
                ragi_materials {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = "Curse Maven"
        url = "https://cursemaven.com"
        content {
            includeGroup 'curse.maven'
        }
    }
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
    implementation fg.deobf("curse.maven:codechicken-lib-1-8-242818:2779848")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
    implementation fileTree(dir: 'libs', include: '*.jar')
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.mod_version
    inputs.property "mcversion", project.minecraft_version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        // replace version and mcversion
        expand(['version': project.mod_version, 'mcversion': project.minecraft_version])
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    //rename "(.+_at.cfg)", 'META-INF/$1' // Access Transformers
}

jar {
    manifest {
        def attribute_map = [:]
        attribute_map["FMLAT"] = "ragi_materials_at.cfg"
        attributes(attribute_map)
    }
    exclude("META-INF/versions/9/module-info.class")
}

compileKotlin.kotlinOptions {
    jvmTarget = "1.8"
}

compileTestKotlin.kotlinOptions {
    jvmTarget = "1.8"
}

fancyGradle {
    patches {
        asm
        codeChickenLib
        coremods
        resources
    }
}