buildscript {

    ext.kotlin_version = "1.8.22"

    repositories {
        maven {
            url = "https://maven.minecraftforge.net"
        }
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version, changing: true
    }
}

plugins {
    id 'wtf.gofancy.fancygradle' version "1.1.+"
    id 'org.jetbrains.kotlin.plugin.serialization' version "1.8.22"
}

apply plugin: "idea"
apply plugin: "java-library"
apply plugin: "kotlin"
apply plugin: "net.minecraftforge.gradle"

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {

    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('client')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--username', 'hiiragi283'
            environment 'MC_VERSION', project.minecraft_version.toString()
            mods {
                material {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('server')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--username', 'hiiragi283'
            environment 'MC_VERSION', project.minecraft_version.toString()
            mods {
                material {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {

    maven {
        name = "Curse Maven"
        url = "https://cursemaven.com"
        content {
            includeGroup 'curse.maven'
        }
    }
    mavenCentral()

}

dependencies {

    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'

    //Deobfuscated Dependencies
    implementation fg.deobf("curse.maven:had-enough-items-557549:4451828")
    implementation fg.deobf("curse.maven:shadowfacts-forgelin-248453:2785465")
    implementation fg.deobf("curse.maven:the-one-probe-245211:2667280")
    //Normal Dependencies
    implementation fg.deobf("curse.maven:dans-mouse-tweaks-461660:3962479")
    implementation fg.deobf("curse.maven:infinity-item-editor-290958:3802759")
    implementation fg.deobf("curse.maven:itemzoom-261725:2643616")
    implementation fg.deobf("curse.maven:placebo-283644:2694382")

    implementation fg.deobf("curse.maven:codechicken-lib-1-8-242818:2779848")
    implementation fg.deobf("curse.maven:cofh-core-69162:2920433")
    implementation fg.deobf("curse.maven:cofh-world-271384:2920434")
    implementation fg.deobf("curse.maven:jei-integration-265917:2951731")
    implementation fg.deobf("curse.maven:redstone-flux-270789:2920436")
    implementation fg.deobf("curse.maven:thermal-expansion-69163:2926431")
    implementation fg.deobf("curse.maven:thermal-foundation-222880:2926428")

    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'

}

processResources {

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.mod_version
    inputs.property "mcversion", project.minecraft_version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        // replace version and mcversion
        expand([
                'version'  : project.mod_version,
                'mcversion': project.minecraft_version
        ])
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
    //rename "(.+_at.cfg)", 'META-INF/$1' // Access Transformers

}

jar {
    manifest {
        def attribute_map = [:]
        attribute_map["FMLAT"] = "ragi_materials_at.cfg"
        attributes(attribute_map)
    }
    exclude("META-INF/versions/9/module-info.class")
}

compileKotlin.kotlinOptions {
    jvmTarget = "1.8"
}

compileTestKotlin.kotlinOptions {
    jvmTarget = "1.8"
}

fancyGradle {
    patches {
        asm
        codeChickenLib
        coremods
        resources
    }
}